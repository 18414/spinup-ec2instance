---
    - name: Create keypair
      ec2_key: 
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: pkey
        state: present
      register: ec2keyvar

    - debug: msg={{ ec2keyvar }}

    - name: Save private key
      lineinfile:  
        create: yes
        path: /home/ansible/aws.pem 
        line: "{{ ec2keyvar.key.private_key }}"
        mode: 0600
        owner: ansible
        group: ansible
      when: ec2keyvar.changed

 
    - name: Launch EC2 instance
      ec2: 
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        key_name: pkey
        image: "{{ imageid }}"  
      # image: ami-0015b9ef68c77328d #CentOS7 community work
      # image: ami-04763b3055de4860b  #Ubuntu Server 16.04 LTS
        assign_public_ip: yes
        wait: yes
        instance_type: "{{ itype }}"
        vpc_subnet_id: subnet-0bae8625
        group: ASGSG
        instance_tags: "{{ aws_tags }}"        
        exact_count: 2  
        count_tag: 
          Application: "{{ aws_tags.Application }}"   
      register: ec2
      
    - debug: msg={{ ec2.instances }}


    - name: Set name tag for AWS instances                                                                                                                                                                                    
      ec2_tag:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        resource: "{{ item.1.id }}"
        tags:
          Name: "{{ aws_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"
      with_indexed_items: "{{ ec2.instances }}"
      loop_control:
        label: "{{ item.1.id }} - {{ aws_tags.Name }}-{{ '%02d' | format(item.0 + 1) }}"      
      register: tagd

    - debug: msg={{ tagd }} 

#    - name: Tag ec2 instance
    #  ec2_tag:
   #     aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
  #      aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
 #       ec2_region: "{{ AWS_REGION }}"
#        resource: "{{ item.id }}" 
      #  state: present
     #   tags:
    #      Name: kubernetes-{{ item }} 
   #       env: kubernetes
  #    with_together: 
 #       - "{{ start=1 end=2 }}"
#        - "{{ ec2.instances }}"

    - name: Create SSH Group to login dynamically to EC2 Instance 
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: webgroup 
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_ssh_private_key_file: /home/ansible/aws.pem
      loop: "{{ ec2.instances }}"

    - name: Append group name into the inventory
      lineinfile:
        path: /etc/ansible/hosts #home/ansible/spinup-ec2instance/inventory/hosts
        line: "[cluster]"


    - name: Add host into the inventory
      lineinfile:
        path: /etc/ansible/hosts #/home/ansible/spinup-ec2instance/inventory/hosts
        insertafter: "[cluster]"
        line: '{{ item.public_ip }}'
      with_items: "{{ ec2.instances }}"

    - name: Add host group vars into the inventory
      lineinfile:
        path: /etc/ansible/hosts #home/ansible/spinup-ec2instance/inventory/hosts
        line: '[cluster:vars]'
    - name: Add pem key file into the inventory
      lineinfile:
        path: /etc/ansible/hosts #/home/ansible/spinup-ec2instance/inventory/hosts
        insertafter: '[cluster:vars]'
        line: ansible_ssh_private_key_file=/home/ansible/aws.pem

    - name: Add pem key file into the inventory
      lineinfile:
        path: /etc/ansible/hosts #/home/ansible/spinup-ec2instance/inventory/hosts
        insertafter: '[cluster:vars]'
        line: ansible_user=centos

  
    - name: Wait for SSH to come up 
      local_action: wait_for
                    host={{ item.public_ip }}
                    port=22
                    state=started
      with_items: "{{ ec2.instances }}"
     
